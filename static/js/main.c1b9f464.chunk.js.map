{"version":3,"sources":["services/Co2EmissionService.tsx","services/MunicipalityService.tsx","components/modals/LeaderboardModal.tsx","components/buttons/Button.tsx","components/buttons/FacebookLoginButton.tsx","components/buttons/IconButton.tsx","components/header/Header.tsx","utils/FormatUtils.tsx","components/header/ParticipantDropdown.tsx","environment/index.tsx","services/connector.tsx","services/ParticipantService.tsx","services/PurchaseService.tsx","components/header/ParticipantHeaderStatus.tsx","components/layout/Col.tsx","components/layout/Row.tsx","components/modals/Modal.tsx","components/Loading.tsx","components/Spinner.tsx","components/CurvedProgressBar.tsx","components/ProgressBar.js","components/MunicipalityProgress.tsx","components/Co2Counter.tsx","components/Table.tsx","components/Chart.tsx","components/InfoSection.tsx","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["totalCo2","co2EmissionTypes","totalPopulation","municipalityData","participantData","Button","children","className","loading","disabled","link","rest","classes","push","join","tag","Link","undefined","to","size","FacebookLoginButton","onClick","text","icon","FaFacebook","IconButton","Icon","Header","Container","Navbar","ParticipantHeaderStatus","FormatUtils","name","split","num","toString","replace","decimalPoint","Math","round","ParticipantDropdown","participant","logout","UncontrolledDropdown","nav","inNavbar","DropdownToggle","getFirstName","thousandSeparator","co2Offset","FaLeaf","DropdownMenu","right","DropdownItem","divider","envParams","api","connector","axios","create","baseURL","EnvParams","headers","Accept","ParticipantService","body","post","data","get","Co2EmissionService","MunicipalityService","PurchaseService","UserHeaderStatus","useState","setLoading","setParticipant","facebookLogout","FB","facebookLogin","login","getFacebookInfo","scope","fields","response","a","console","log","error","getParticipant","currentParticipant","useEffect","checkFacebookStatus","getLoginStatus","status","setTimeout","UserState","Modal","header","footer","ModalHeader","ModalBody","ModalFooter","LeaderboardModal","isParticipants","setIsParticipants","rows","tableData","setTabledata","switchType","getMunicipalities","getParticipants","sort","b","co22Offset","code","label","hover","Loading","style","marginTop","Spinner","CurvedProgressBar","fillColor","getComputedStyle","document","documentElement","getPropertyValue","trailColor","ProgressBar","SemiCircle","options","strokeWidth","color","duration","initialAnimate","Shape","progressBar","React","createRef","props","oldProps","this","shape","container","current","ShapeClass","setProgress","progress","animateProgress","setText","destroy","animate","set","prevProps","isEqual","containerClassName","ref","Component","defaultProps","containerStyle","Line","Circle","MunicipalityProgress","municipality","co2PerPerson","population","Progress","multi","bar","value","Co2Counter","totalOffset","Table","map","key","row","index","Chart","emissionData","colors","colorsBuffer","x","chartTooltipBackground","chartTooltipColor","sumTotal","y","co2","reduce","length","chartData","datasets","subgroups","subtypes","z","backgroundColor","pop","hoverBorderColor","hoverBorderWidth","animation","duation","legend","display","scales","xAxes","gridLines","drawBorder","scaleLabel","labelString","fontSize","fontColor","padding","ticks","callback","toLocaleString","yAxes","type","zeroLineWidth","drawOnChartArea","responsive","responsiveAnimationDuration","mode","tooltips","axis","intersect","bodyFontColor","titleFontColor","titleFontSize","bodyFontSize","bodySpacing","titleAlign","callbacks","title","tooltipItem","datasetIndex","percentage","imagePath","alt","src","Home","openModal","setOpenModal","setTotalOffset","setTotalCo2","setTotalPopulation","emissionTypes","setEmissionTypes","municipalities","setMunicipalities","getProgress","getTotalPopulation","getTotalCo2","getEmissionTypes","getCo2EmissionTypes","catch","types","getTotalOffset","offset","co2Total","m","idx","id","isOpen","toggle","InfoSection","href","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","message"],"mappings":"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","file":"static/js/main.c1b9f464.chunk.js","sourcesContent":["import connector from './connector'\r\n\r\nlet totalCo2: any\r\nlet co2EmissionTypes: any\r\nclass Co2EmissionService {\r\n  static async getCo2EmissionTypes () {\r\n    if (co2EmissionTypes) {\r\n      return co2EmissionTypes\r\n    }\r\n    const { data } = await connector.get('/co2emissiontypes/')\r\n    co2EmissionTypes = data\r\n    return co2EmissionTypes\r\n  }\r\n\r\n  static async getTotalCo2  (){\r\n    if (!totalCo2) {\r\n      const { data } = await connector.get('/totalCo2/')\r\n      totalCo2 = data\r\n    }\r\n    return totalCo2\r\n  }\r\n}\r\n\r\nexport default Co2EmissionService\r\n","import connector from './connector'\r\n\r\nlet totalPopulation: any\r\n\r\nclass MunicipalityService {\r\n  static async getMunicipalities () {\r\n    const { data } = await connector.get('/municipalities/')\r\n    return data\r\n  }\r\n\r\n  static async getTotalPopulation () {\r\n    if (!totalPopulation) {\r\n      const { data } = await connector.get('/population/')\r\n      totalPopulation = data\r\n    }\r\n    return totalPopulation\r\n  }\r\n}\r\n\r\nexport default MunicipalityService\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Button, Modal, Table } from 'components'\r\nimport { TableHeader, TableRow } from 'types'\r\nimport { MunicipalityService, ParticipantService } from 'services'\r\n\r\nimport './LeaderboardModal.scss'\r\n\r\ntype TableData = {\r\n  headers: TableHeader[],\r\n  rows: TableRow[]\r\n}\r\n\r\ntype LeaderboardModalProps = {\r\n  [rest:string]: any\r\n}\r\n\r\nlet municipalityData: any\r\nlet participantData: any\r\n\r\nconst LeaderboardModal = ({ ...rest }: LeaderboardModalProps) => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [isParticipants, setIsParticipants] = useState(true)\r\n  const [tableData, setTabledata]: [TableData, any] = useState({\r\n    headers: [],\r\n    rows: []\r\n  })\r\n\r\n  useEffect(() => {\r\n    switchType()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const switchType = () => {\r\n    if (isParticipants) {\r\n      getMunicipalities()\r\n    } else {\r\n      getParticipants()\r\n    }\r\n    setIsParticipants(!isParticipants)\r\n  }\r\n\r\n  const getMunicipalities = async () => {\r\n    if (!municipalityData) {\r\n      setLoading(true)\r\n      try {\r\n        const response = await MunicipalityService.getMunicipalities()\r\n        municipalityData = response.sort((a: TableRow, b: TableRow) => a.co22Offset - b.co22Offset)\r\n      } catch (e) {\r\n        console.log(e)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    setTabledata({\r\n      headers: [\r\n        {\r\n          code: 'name',\r\n          label: 'Sveitarfélag'\r\n        },\r\n        {\r\n          code: 'population',\r\n          label: 'Íbúafjöldi'\r\n        },\r\n        {\r\n          code: 'ton',\r\n          label: 'Tonn'\r\n        }\r\n      ],\r\n      rows: municipalityData\r\n    })\r\n  }\r\n\r\n  const getParticipants = async () => {\r\n    if (!participantData) {\r\n      setLoading(true)\r\n      try {\r\n        const response = await ParticipantService.getParticipants()\r\n        participantData = response.sort((a: TableRow, b: TableRow) => a.co22Offset - b.co22Offset)\r\n      } catch (e) {\r\n        console.log(e)\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    }\r\n    setTabledata({\r\n      headers: [\r\n        {\r\n          code: 'name',\r\n          label: 'Þátttakandi'\r\n        },\r\n        {\r\n          code: 'ton',\r\n          label: 'Tonn'\r\n        }\r\n      ],\r\n      rows: participantData\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='leaderboard-modal-component'\r\n      size='xl'\r\n      {...rest}\r\n    >\r\n      <Button onClick={() => switchType()}>\r\n        {isParticipants ? 'Sjá sveitarfélög' : 'Sjá þátttakendur'}\r\n      </Button>\r\n      <Table\r\n        headers={tableData.headers}\r\n        rows={tableData.rows}\r\n        loading={loading}\r\n        hover\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default LeaderboardModal\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button as BootstrapButton } from 'reactstrap'\r\n\r\nimport { Spinner } from 'components'\r\n\r\ntype ButtonProps = {\r\n  children: any,\r\n  className?: string,\r\n  loading?: boolean,\r\n  disabled?: boolean,\r\n  link?: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Button = ({ children, className, loading, disabled, link, ...rest }: ButtonProps) => {\r\n  const classes = ['button-component']\r\n  if (className) {\r\n    classes.push(className)\r\n  }\r\n\r\n  return (\r\n    <BootstrapButton\r\n      className={classes.join(' ')}\r\n      disabled={disabled || loading}\r\n      tag={link ? Link : undefined}\r\n      to={link || undefined}\r\n      {...rest}\r\n    >\r\n      {loading && (\r\n        <Spinner size={1} />\r\n      )}\r\n      {children}\r\n    </BootstrapButton>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { FaFacebook } from 'react-icons/fa'\r\n\r\nimport { IconButton } from 'components'\r\n\r\nimport './FacebookLoginButton.scss'\r\n\r\ntype FacebookLoginButtonProps = {\r\n  onClick(): void\r\n}\r\n\r\nconst FacebookLoginButton = ({ onClick }: FacebookLoginButtonProps) => (\r\n  <IconButton\r\n    className='facebook-login-button-component'\r\n    onClick={onClick}\r\n    text='Innskrá með Facebook'\r\n    icon={FaFacebook}\r\n  />\r\n)\r\n\r\nexport default FacebookLoginButton\r\n","import React from 'react'\r\n\r\nimport { Button } from 'components'\r\n\r\ntype IconButtonProps = {\r\n  icon: any,\r\n  text: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst IconButton = ({ icon, text, ...rest }: IconButtonProps) => {\r\n  const Icon = icon\r\n  return (\r\n    <Button {...rest}>\r\n      <Icon className={`${text ? 'mr-1' : ''}`} /> {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default IconButton\r\n","import React from 'react'\r\nimport { Navbar, Container } from 'reactstrap'\r\n\r\nimport { ParticipantHeaderStatus } from 'components'\r\n\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Container className='header-component'>\r\n      <Navbar>\r\n        <div />\r\n\r\n        <ParticipantHeaderStatus />\r\n      </Navbar>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","class FormatUtils {\r\n  static getFirstName (name: string) {\r\n    return name.split(' ')[0]\r\n  }\r\n\r\n  static thousandSeparator (num: number) {\r\n    return num.toString().replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\r\n  }\r\n\r\n  static round (num: number, decimalPoint: number = 0) {\r\n    return (Math.round(num * 10 ** decimalPoint) / (10 ** decimalPoint)).toString().replace('.', ',')\r\n  }\r\n}\r\n\r\nexport default FormatUtils\r\n","import React from 'react'\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { FaLeaf } from 'react-icons/fa'\r\n\r\nimport { IconButton } from 'components'\r\nimport { FormatUtils } from 'utils'\r\nimport { Participant } from 'types'\r\n\r\ntype ParticipantDropdownProps = {\r\n  participant?: Participant,\r\n  logout(): void\r\n}\r\n\r\nconst ParticipantDropdown = ({ participant, logout }: ParticipantDropdownProps) => (\r\n  <>\r\n    <UncontrolledDropdown nav inNavbar>\r\n      <DropdownToggle nav>\r\n        <IconButton\r\n          text={`${FormatUtils.getFirstName((participant?.name || ''))} - ${FormatUtils.thousandSeparator(participant?.co2Offset || 0)} tonn jöfnuð`}\r\n          icon={FaLeaf}\r\n        />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem>\r\n          Skógurinn minn\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        <DropdownItem onClick={logout}>\r\n          Útskrá\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  </>\r\n)\r\n\r\nexport default ParticipantDropdown\r\n","type EnvParams = {\r\n  api: string\r\n}\r\n\r\nconst production: EnvParams = {\r\n  api: 'https://api.jofnumokkur.xyz/v1'\r\n}\r\n\r\nconst local: EnvParams = {\r\n  api: 'http://127.0.0.1:8000/v1'\r\n}\r\n\r\n// const env = process.env.REACT_APP_ENV\r\nconst env = 'production';\r\n\r\nconst envParams: EnvParams = (\r\n  env === 'production'\r\n    ? production\r\n    : local\r\n)\r\n\r\nexport default envParams\r\n","import axios from 'axios'\r\n\r\nimport EnvParams from 'environment'\r\n\r\nconst connector = axios.create({\r\n  baseURL: `${EnvParams.api}`,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-type': 'application/json'\r\n  }\r\n})\r\n\r\nexport default connector\r\n","import connector from './connector'\r\n\r\nclass ParticipantService {\r\n  static async getParticipant (body: {\r\n    email: string,\r\n    name: string\r\n  }) {\r\n    const { data } = await connector.post('/participant/', body)\r\n    return data\r\n  }\r\n\r\n  static async getParticipants () {\r\n    const { data } = await connector.get('/participants/')\r\n    return data\r\n  }\r\n}\r\n\r\nexport default ParticipantService\r\n","import connector from './connector'\r\n\r\nclass PurchaseService {\r\n  static async getTotalOffset () {\r\n    const { data } = await connector.get('/totalOffset/')\r\n    return data\r\n  }\r\n}\r\n\r\nexport default PurchaseService\r\n","/* global FB */\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nimport { FacebookLoginButton, ParticipantDropdown } from 'components'\r\nimport { ParticipantService } from 'services'\r\nimport { Participant } from 'types'\r\n\r\nconst UserHeaderStatus = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [participant, setParticipant]: [Participant, any] = useState(null)\r\n\r\n  const checkFacebookStatus = () => {\r\n    setLoading(true)\r\n    if (typeof FB !== 'undefined') {\r\n      FB.getLoginStatus((response: any) => {\r\n        console.log('FB get login status response', response)\r\n        if (response.status === 'connected') {\r\n          getFacebookInfo()\r\n        } else {\r\n          setLoading(false)\r\n        }\r\n      })\r\n    } else {\r\n      setTimeout(() => {\r\n        checkFacebookStatus()\r\n      }, 300)\r\n    }\r\n  }\r\n\r\n  const facebookLogout = () => {\r\n    FB.logout(() => {\r\n      setParticipant(null)\r\n    })\r\n  }\r\n\r\n  const facebookLogin = () => {\r\n    FB.login(() => {\r\n      getFacebookInfo()\r\n    }, { scope: 'public_profile,email' })\r\n  }\r\n\r\n  const getFacebookInfo = () => {\r\n    FB.api('/me', { fields: 'name, email' }, async (response: any) => {\r\n      console.log('FB /me response', response)\r\n      try {\r\n        if (!response.error) {\r\n          const currentParticipant = await ParticipantService.getParticipant(response)\r\n          setParticipant(currentParticipant)\r\n        }\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkFacebookStatus()\r\n  // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const UserState = () => {\r\n    if (loading) {\r\n      return null\r\n    } else if (!participant) {\r\n      return <FacebookLoginButton onClick={facebookLogin} />\r\n    }\r\n    return <ParticipantDropdown\r\n      participant={participant}\r\n      logout={facebookLogout}\r\n    />\r\n  }\r\n\r\n  return <UserState />\r\n}\r\n\r\nexport default UserHeaderStatus\r\n","import { Col } from 'reactstrap'\r\n\r\nexport default Col\r\n","import { Row } from 'reactstrap'\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport { Modal as BootstrapModal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\ntype ModalProps = {\r\n  children?: any,\r\n  header?: string,\r\n  footer?: any,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Modal = ({ header, footer, children, ...rest }: ModalProps) => (\r\n  <BootstrapModal {...rest}>\r\n    {header && (<ModalHeader>{header}</ModalHeader>)}\r\n    {children && (<ModalBody>{children}</ModalBody>)}\r\n    {footer && (<ModalFooter>{footer}</ModalFooter>)}\r\n  </BootstrapModal>\r\n)\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nimport { Spinner } from 'components'\r\n\r\nimport './Loading.scss'\r\n\r\ntype LoadingProps = {\r\n  size?: number\r\n}\r\n\r\nconst Loading = ({ size = 2 }: LoadingProps) => {\r\n  return (\r\n    <div className='loading-component' style={{ marginTop: `${size / 2}em` }}>\r\n      <Spinner size={size} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading\r\n","import React from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\n\r\nimport './Spinner.scss'\r\n\r\ntype SpinnerProps = {\r\n  size?: number\r\n}\r\n\r\nconst Spinner = ({ size = 2 }: SpinnerProps) => {\r\n  return (\r\n    <div className='spinner-component'>\r\n      <FaSpinner className='icon-spin' size={`${size}em`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { ProgressBar } from 'components'\r\n\r\ntype ProgressBarProps = {\r\n  [rest:string]: any\r\n}\r\n\r\nconst CurvedProgressBar = ({ ...rest }: ProgressBarProps) => {\r\n  const fillColor = getComputedStyle(document.documentElement)\r\n    .getPropertyValue('--progress-bar-fill')\r\n\r\n  const trailColor = getComputedStyle(document.documentElement)\r\n    .getPropertyValue('--progress-bar-trail')\r\n\r\n  return (\r\n    <ProgressBar.SemiCircle\r\n      options={{\r\n        strokeWidth: 4,\r\n        color: fillColor,\r\n        trailColor: trailColor,\r\n        duration: 1500\r\n      }}\r\n      initialAnimate={true}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CurvedProgressBar\r\n","import React, { Component } from 'react'\r\nimport isEqual from 'lodash/isEqual'\r\nimport ProgressBar from 'progressbar.js'\r\n\r\nclass Shape extends Component {\r\n  static defaultProps = {\r\n    ShapeClass: null,\r\n    options: {},\r\n    progress: 0,\r\n    text: null,\r\n    initialAnimate: false,\r\n    containerStyle: {},\r\n    containerClassName: 'progressbar-container'\r\n  };\r\n\r\n  shape;\r\n\r\n  progressBar = React.createRef();\r\n\r\n  create (props, oldProps) {\r\n    if (this.shape) {\r\n      return\r\n    }\r\n\r\n    // setState function is not used to prevent a new render cycle\r\n    // This handling happens outside of React component's lifecycle\r\n    const container = this.progressBar.current\r\n    this.shape = new props.ShapeClass(container, props.options)\r\n    if (props.initialAnimate) {\r\n      if (oldProps) {\r\n        this.setProgress(oldProps.progress)\r\n      }\r\n\r\n      this.animateProgress(props.progress)\r\n    } else {\r\n      this.setProgress(props.progress)\r\n    }\r\n\r\n    this.setText(props.text)\r\n  }\r\n\r\n  destroy () {\r\n    if (this.shape) {\r\n      this.shape.destroy()\r\n      this.shape = null\r\n    }\r\n  }\r\n\r\n  animateProgress (progress) {\r\n    this.shape.animate(progress)\r\n  }\r\n\r\n  setProgress (progress) {\r\n    this.shape.set(progress)\r\n  }\r\n\r\n  setText (text) {\r\n    if (text) {\r\n      this.shape.setText(text)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (!isEqual(this.props.options, prevProps.options)) {\r\n      this.destroy()\r\n      this.create(this.props, prevProps)\r\n    }\r\n    this.animateProgress(this.props.progress)\r\n    this.setText(this.props.text)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.create(this.props, null)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.destroy()\r\n  }\r\n\r\n  render () {\r\n    const { style, containerClassName } = this.props\r\n    return <div className={containerClassName} style={style} ref={this.progressBar} />\r\n  }\r\n}\r\n\r\nclass Line extends Component {\r\n  render () {\r\n    return <Shape {...this.props} ShapeClass={ProgressBar.Line} />\r\n  }\r\n}\r\n\r\nclass Circle extends Component {\r\n  render () {\r\n    return <Shape {...this.props} ShapeClass={ProgressBar.Circle} />\r\n  }\r\n}\r\n\r\nclass SemiCircle extends Component {\r\n  render () {\r\n    return <Shape {...this.props} ShapeClass={ProgressBar.SemiCircle} />\r\n  }\r\n}\r\n\r\nexport default {\r\n  Line,\r\n  Circle,\r\n  SemiCircle\r\n}\r\n","import React from 'react'\r\n\r\nimport { Progress } from 'reactstrap'\r\nimport { Municipality } from 'types'\r\nimport { FormatUtils } from 'utils'\r\n\r\nimport './MunicipalityProgress.scss'\r\n\r\ntype MunicipalityProgressProps = {\r\n  municipality: Municipality,\r\n  totalPopulation: number,\r\n  totalCo2: number,\r\n  [rest:string]: any\r\n}\r\n\r\nconst MunicipalityProgress = ({ municipality, totalPopulation, totalCo2, ...rest }: MunicipalityProgressProps) => {\r\n  const co2PerPerson = totalCo2 / totalPopulation\r\n  const progress = (100 * municipality.co2Offset / (co2PerPerson * municipality.population))\r\n\r\n  return (\r\n    <div className='municipality-progress-component'>\r\n      <div className='name'>{municipality.name}</div>\r\n      <Progress multi>\r\n        <Progress className='offset' bar value={progress} />\r\n        <Progress className='remaining' bar value={100 - progress}>{FormatUtils.round(progress, 1)}%</Progress>\r\n      </Progress>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MunicipalityProgress\r\n","import React from 'react'\r\n\r\nimport { FormatUtils } from 'utils'\r\n\r\ntype Co2CounterProps = {\r\n  totalOffset: number,\r\n  [rest: string]: any\r\n}\r\n\r\nconst Co2Counter = ({ totalOffset, ...rest }: Co2CounterProps) => (\r\n  <div {...rest}>\r\n    <p>{FormatUtils.thousandSeparator(totalOffset)}</p>\r\n    <p> tonn jöfnuð</p>\r\n  </div>\r\n)\r\n\r\nexport default Co2Counter\r\n","import React from 'react'\r\nimport { Table as BootstrapTable } from 'reactstrap'\r\n\r\nimport { Loading } from 'components'\r\n\r\nimport { TableHeader, TableRow } from 'types'\r\n\r\ntype TableProps = {\r\n  headers: TableHeader[],\r\n  rows: TableRow[],\r\n  loading: boolean,\r\n  [rest: string]: any;\r\n}\r\n\r\nconst Table = ({ headers, rows, loading, ...rest }: TableProps) => (\r\n  <BootstrapTable {...rest}>\r\n    {loading ? <Loading /> : (\r\n      <>\r\n        <thead>\r\n          <tr>\r\n            <th />\r\n            {headers.map((header) => (\r\n              <th key={header.code}>{header.label}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {rows.map((row, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}.</td>\r\n              {headers.map((header) => (\r\n                <td key={header.code}>\r\n                  {row[header.code]}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </>\r\n    )}\r\n  </BootstrapTable>\r\n)\r\n\r\nexport default Table\r\n","import React from \"react\";\r\n\r\nimport { HorizontalBar } from \"react-chartjs-2\";\r\n\r\ntype ChartProps = {\r\n  emissionData: any[];\r\n  [rest: string]: any;\r\n};\r\n\r\nconst Chart = ({ emissionData, ...rest }: ChartProps) => {\r\n  console.log(\"Creating chart\");\r\n  const colors = [\r\n    \"#F0DEC2\",\r\n    \"#FACAD0\",\r\n    \"#CBC3E3\",\r\n    \"#CAF7FA\",\r\n    \"#A4F088\",\r\n    \"#FA8E62\",\r\n    \"#CBC3E3\",\r\n    \"#CAFADF\",\r\n    \"#F0D784\",\r\n    \"#FA8FEA\",\r\n    \"#CBC3E3\",\r\n    \"#CAE5FA\",\r\n    \"#84F0C5\"\r\n  ];\r\n  var colorsBuffer = colors.map(x=> x);\r\n  const charTitle = \"Losun CO2 í tonnum\";\r\n  const chartTooltipBackground = getComputedStyle(\r\n    document.documentElement\r\n  ).getPropertyValue(\"--chart-tooltip-background\");\r\n\r\n  const chartTooltipColor = getComputedStyle(\r\n    document.documentElement\r\n  ).getPropertyValue(\"--chart-tooltip-color\");\r\n\r\n  emissionData = emissionData.sort((x, y) => {\r\n    return y.co2 - x.co2;\r\n  });\r\n \r\n  var sumTotal = emissionData.map(x => x.co2).reduce((x, y) => x + y);\r\n  emissionData.length = 6;\r\n\r\n  let chartData = {\r\n    datasets: emissionData.map(x => {\r\n      return {\r\n        data: [x.co2],\r\n        label:x.name,\r\n        subgroups : x.subtypes.sort((z:any, y:any) => y.co2 - z.co2),\r\n        backgroundColor: colorsBuffer.length > 0 ? colorsBuffer.pop() : (colorsBuffer = colors.map(x=> x)).pop(),\r\n        hoverBorderColor: chartTooltipBackground,\r\n        hoverBorderWidth: 1.5\r\n      };\r\n    }),\r\n    label: charTitle\r\n  };\r\n\r\n  let options = {\r\n    animation: {\r\n      duation: 0\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false\r\n          },\r\n          scaleLabel: {\r\n            labelString: \"Tonn af CO2 losuð\",\r\n            fontSize: 16,\r\n            fontColor: \"#ccc\",\r\n            padding: 6,\r\n            display: true\r\n          },\r\n          ticks: {\r\n            callback: function(value: number) {\r\n              return value.toLocaleString(\"IS-is\");\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n       \r\n  \r\n          type:\"category\",\r\n          gridLines: {\r\n            zeroLineWidth: 0,\r\n            drawOnChartArea: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    responsive: true,\r\n    responsiveAnimationDuration: 0,\r\n    hover: {\r\n      mode: \"nearest\"\r\n    },\r\n    tooltips: {\r\n      mode: \"nearest\",\r\n      axis: 'y',\r\n      intersect:false,\r\n      backgroundColor: chartTooltipBackground,\r\n      bodyFontColor: chartTooltipColor,\r\n      titleFontColor: chartTooltipColor,\r\n      titleFontSize:20,\r\n      bodyFontSize:14,\r\n      bodySpacing:3,\r\n      titleAlign:\"center\",\r\n      callbacks: {\r\n        title: function(tooltipItem: any, data: any) {\r\n          console.log(tooltipItem, data)\r\n          tooltipItem = tooltipItem[0];\r\n          return data.datasets[tooltipItem.datasetIndex].label;;\r\n        },\r\n        label: function(tooltipItem: any, data: any) {\r\n          var label = data.datasets[tooltipItem.datasetIndex].subgroups\r\n              .map( (x: any) => {\r\n                var percentage = Math.round(\r\n                  (x.co2 / sumTotal) *\r\n                    1000\r\n                ) / 10;\r\n                  return x.name + \": \" + percentage + \"%\"\r\n              });\r\n\r\n         \r\n          return label;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  console.log(chartData.datasets);\r\n  return (\r\n    <div className=\"chart_container\">\r\n        <h2 className = \"header_style\">Hvar losum við mest?</h2>\r\n      <HorizontalBar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\ntype InfoSectionProps = {\r\n  text?: string;\r\n  title?: string;\r\n  imagePath?: string;\r\n\r\n  [rest: string]: any;\r\n};\r\n\r\nconst Button = ({ text, title, imagePath, ...rest }: InfoSectionProps) => {\r\n  return (\r\n    <section className=\"info_section\" {...rest}>\r\n      <img alt=\"Jöfnum okkur\" src={imagePath} />\r\n      <h2 className=\"header_style\">{title}</h2>\r\n      <p>{text}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Button, CurvedProgressBar, Co2Counter, LeaderboardModal, MunicipalityProgress,InfoSection, Chart } from 'components'\r\nimport { Co2EmissionService, PurchaseService, MunicipalityService } from 'services'\r\nimport { Municipality } from 'types'\r\n\r\nimport './Home.scss'\r\n\r\nconst Home = () => {\r\n  const [openModal, setOpenModal] = useState(\"\");\r\n  const [totalOffset, setTotalOffset] = useState(0);\r\n  const [totalCo2, setTotalCo2] = useState(0);\r\n  const [totalPopulation, setTotalPopulation] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [emissionTypes, setEmissionTypes]: [any[], any] = useState([]);\r\n  const [municipalities, setMunicipalities]: [Municipality[], any] = useState(\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getProgress();\r\n    getMunicipalities();\r\n    getTotalPopulation();\r\n    getTotalCo2();\r\n    getEmissionTypes();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getEmissionTypes = async () => {\r\n    let types = await Co2EmissionService.getCo2EmissionTypes().catch(error =>\r\n      console.log(error)\r\n    );\r\n    console.log(types);\r\n    setEmissionTypes(types);\r\n  };\r\n\r\n  const getProgress = async () => {\r\n    const offset = await PurchaseService.getTotalOffset().catch(error =>\r\n      console.log(error)\r\n    );\r\n    const co2Total = await Co2EmissionService.getTotalCo2().catch(error =>\r\n      console.log(error)\r\n    );\r\n    let status = offset / co2Total;\r\n    setTotalOffset(offset);\r\n    if (status > 1) {\r\n      status = 1;\r\n    }\r\n    setProgress(status);\r\n  };\r\n\r\n  const getTotalPopulation = async () => {\r\n    const population = await MunicipalityService.getTotalPopulation().catch(\r\n      error => console.log(error)\r\n    );\r\n    setTotalPopulation(population);\r\n  };\r\n\r\n  const getTotalCo2 = async () => {\r\n    const co2 = await Co2EmissionService.getTotalCo2().catch(error =>\r\n      console.log(error)\r\n    );\r\n    setTotalCo2(co2);\r\n  };\r\n\r\n  const getMunicipalities = async () => {\r\n    try {\r\n      const response = await MunicipalityService.getMunicipalities().catch(\r\n        error => console.log(error)\r\n      );\r\n      response.sort(\r\n        (a: Municipality, b: Municipality) =>\r\n          b.co2Offset / a.population - a.co2Offset / b.population\r\n      );\r\n      setMunicipalities(response);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <img className=\"logo\" alt=\"Jöfnum okkur\" src=\"/assets/logo-200x200.png\" />\r\n      <section className=\"intro_section\">\r\n        <div className=\"counter_and_logo_outer_container\">\r\n          <div className=\"counter_and_logo_container\">\r\n            <Co2Counter className=\"co2counter\" totalOffset={totalOffset} />\r\n            <Button className='offset-yourself'>Jafnaðu þig</Button>\r\n            <div className=\"municipalities-progress\">\r\n              {municipalities.map((m, idx) =>\r\n                idx >= 5 ? null : (\r\n                  <MunicipalityProgress\r\n                    key={m.id}\r\n                    municipality={m}\r\n                    totalPopulation={totalPopulation}\r\n                    totalCo2={totalCo2}\r\n                  />\r\n                )\r\n              )}\r\n              <Button className='view-all-municipalities'>Sjá öll</Button>\r\n            </div>\r\n          </div>\r\n          <CurvedProgressBar progress={progress} />\r\n        </div>\r\n\r\n      </section>\r\n      {/* <Button onClick={() => setOpenModal('leaderboard')}>\r\n        Sjá stigatöflu\r\n      </Button> */}\r\n      <LeaderboardModal\r\n        isOpen={openModal === \"leaderboard\"}\r\n        toggle={() => setOpenModal(\"\")}\r\n      />\r\n      <InfoSection title = \"Jöfnum okkur á loftlagsbreytingum!\"  text = \"Gerðu þitt í baráttunni með því að gróðursetja tré. Skráðu þig inn í gegnum Facebook og kauptu tré frá kolefnisjöfnunarsjóði að eigin vali. Jafnaðu þig á loftlagsbreytingum og losnaðu við flugviskubitið!\"\r\n      imagePath=\"/assets/travel.png\" />\r\n\r\n      <InfoSection title = \"Hvað er kolefnisjöfnun?\"\r\n                   text = \"Kolefnisjöfnun snýst um að binda aftur þau kolefni losuð hafa verið út í andrúmsloftið. Til eru ýmsar aðferðir til þess, en ein þeirra er að  gróðursetja tré. Með því að binda kolefni vegur þú á móti losun gróðurhúsalofttegunda og tekur grænt skref inn í framtíðina.\"\r\n                   imagePath=\"/assets/seed.png\" />\r\n\r\n<InfoSection title = \"Jafnaðu þig mest!\"\r\n                   text = \"Við höldum utan um það hvaða bæjarfélög jafna sig hraðast. Þeir sem hafa mesta jafnaðargeðið birtast á topp fimm lista okkar, en þú sem einstaklingur birtist einnig í einstaklingskeppninni. Sýndu vinum og ættingjum þínum hversu jafnlyndur einstaklingur þú ert!\"\r\n                   imagePath=\"/assets/hall.png\" />\r\n      <p className = \"icons_whodunnit\">Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></p>\r\n      <section className=\"chart_section\">\r\n        {!emissionTypes || emissionTypes.length === 0 ? null : (\r\n          <Chart emissionData={emissionTypes} />\r\n        )}\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n// Photo by Jon Flobrant on Unsplash\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\n\r\nimport { Header } from 'components'\r\n\r\nimport { Home } from 'pages'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles/index.scss'\r\n\r\nconst App = () => (\r\n  <>\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    </Router>\r\n  </>\r\n)\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n \r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}