{"version":3,"sources":["services/Co2EmissionService.tsx","services/MunicipalityService.tsx","services/OffsetAgentService.tsx","components/buttons/Button.tsx","components/buttons/FacebookButton.tsx","components/buttons/IconButton.tsx","components/header/Header.tsx","utils/FormatUtils.tsx","utils/FormUtils.tsx","components/header/ParticipantDropdown.tsx","environment/index.tsx","services/connector.tsx","services/ParticipantService.tsx","services/PurchaseService.tsx","states/ParticipantState.tsx","components/header/ParticipantHeaderStatus.tsx","components/inputs/Form.tsx","components/inputs/FormInput.tsx","components/inputs/FormSearchableSelect.tsx","components/inputs/FormSwitch.tsx","components/inputs/FormTextarea.tsx","components/layout/Col.tsx","components/layout/Row.tsx","components/modals/Modal.tsx","components/modals/MunicipalitiesModal.tsx","components/modals/PurchaseModal.tsx","components/modals/MyPurchasesModal.tsx","components/modals/ConfirmedModal.tsx","components/Spinner.tsx","components/CurvedProgressBar.tsx","components/ProgressBar.js","components/MunicipalityProgress.tsx","components/Co2Counter.tsx","components/Chart.tsx","components/DoughnutChart.tsx","components/InfoSection.tsx","components/OffsetAgentSelector.tsx","pages/Home.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["totalCo2","co2EmissionTypes","totalPopulation","offsetAgents","Button","children","className","loading","disabled","link","rest","classes","push","join","tag","Link","undefined","to","size","FacebookButton","onClick","text","icon","FaFacebook","IconButton","subtext","Icon","Header","Container","Navbar","ParticipantHeaderStatus","FormatUtils","name","split","num","toString","replace","this","thousandSeparator","decimalPoint","Math","round","FormUtils","formName","document","getElementById","click","forms","reset","ParticipantDropdown","participant","logout","myPurchases","UncontrolledDropdown","nav","inNavbar","DropdownToggle","getFirstName","title","co2Offset","FaLeaf","DropdownMenu","right","DropdownItem","divider","envParams","api","connector","axios","create","baseURL","EnvParams","headers","Accept","ParticipantService","body","post","data","get","Co2EmissionService","MunicipalityService","PurchaseService","OffsetAgentService","defaultParticipant","email","ParticipantState","createStateLink","setParticipant","console","log","set","updateCo2","a","current","getParticipant","UserHeaderStatus","useState","setLoading","useStateLink","openModal","setOpenModal","setTotalCo2","setTotalPopulation","municipalities","setMunicipalities","useEffect","getMunicipalities","getTotalPopulation","getTotalCo2","catch","error","response","sort","b","population","co2","openPurchasesModal","facebookLogout","FB","facebookLogin","login","getFacebookInfo","scope","fields","currentParticipant","checkFacebookStatus","getLoginStatus","status","setTimeout","UserState","isOpen","toggle","emissionPerPerson","Form","onSubmit","validationSchema","methods","useForm","handleSubmit","key","id","type","FormInput","label","onChange","useFormContext","register","errors","hasError","inputClasses","Label","ref","e","target","value","message","FormSearchableSelect","defaultValue","setValue","selectedOption","setSelectedOption","handleChange","parsedValue","Array","isArray","map","v","readOnly","FormSwitch","checked","setChecked","toggleChange","FormTextarea","rows","Col","Row","Modal","header","footer","ModalHeader","ModalBody","ModalFooter","MunicipalitiesModal","m","idx","municipality","rank","schema","yup","shape","participantName","required","participantEmail","quantity","min","receiverEmail","when","gift","receiverName","previuosProgress","PurchaseModal","selectedOffsetAgent","setSelectedOffsetAgent","setQuantity","setGift","currentProgress","co2PerItem","remaining","submit","costPerItem","offsetAgent","createPurchase","selected","onSelect","agent","setAgent","md","itemLabel","currency","Progress","multi","bar","placeholder","options","submitForm","progress","MyPurchasesModal","treeCount","treeAnimationStep","treeAnimationStatus","createNudgeTreeStyle","randomMargin","random","marginLeft","marginTop","maxWidth","animationDelay","trees","i","src","style","alt","progressBarFillColor","getComputedStyle","documentElement","getPropertyValue","progressBarTrailColor","percentage","ProgressBar","Line","strokeWidth","color","trailColor","duration","initialAnimate","ui","method","href","quote","ConfirmedModal","imagePath","Spinner","CurvedProgressBar","fillColor","SemiCircle","Shape","progressBar","React","createRef","props","oldProps","container","ShapeClass","setProgress","animateProgress","setText","destroy","animate","prevProps","isEqual","containerClassName","Component","defaultProps","containerStyle","Circle","MunicipalityProgress","co2PerPerson","progressString","Co2Counter","totalOffset","Chart","emissionData","colors","chartTooltipBackground","chartTooltipColor","sumTotal","x","y","reduce","length","maxTooltipCategories","subtypes","lastEntryValue","colorsIdx","chartData","datasets","subgroups","z","backgroundColor","hoverBorderColor","hoverBorderWidth","plugins","labels","render","overlap","arc","textShadow","shadowBlur","fontSize","shadowOffsetX","fontColor","shadowOffsetY","animation","duation","legend","display","scales","xAxes","gridLines","drawBorder","scaleLabel","labelString","padding","ticks","callback","toLocaleString","yAxes","zeroLineWidth","drawOnChartArea","responsive","responsiveAnimationDuration","hover","mode","tooltips","axis","intersect","bodyFontColor","titleFontColor","titleFontSize","bodyFontSize","bodySpacing","titleAlign","callbacks","tooltipItem","datasetIndex","DoughnutChart","tempArr","concat","borderAlign","args","fullWidth","position","index","OffsetAgentSelector","Tile","Home","setTotalOffset","newestPurchases","setNewestPurchases","leaderboard","setLeaderboard","emissionTypes","setEmissionTypes","setOffsetAgents","getAllProgress","getProgress","getNewestPurchases","getLeaderboard","getEmissionTypes","getOffsetAgents","agents","purchases","getCo2EmissionTypes","types","getTotalOffset","offset","co2Total","data-tip","purchase","municipalityName","p","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.73eff2c5.chunk.js","sourcesContent":["import connector from './connector'\r\n\r\nlet totalCo2: any\r\nlet co2EmissionTypes: any\r\nclass Co2EmissionService {\r\n  static async getCo2EmissionTypes () {\r\n    if (!co2EmissionTypes) {\r\n      const { data } = await connector.get('/co2emissiontypes/')\r\n      co2EmissionTypes = data\r\n    }\r\n    return co2EmissionTypes\r\n  }\r\n\r\n  static async getTotalCo2 () {\r\n    if (!totalCo2) {\r\n      const { data } = await connector.get('/homesTotalCo2/')\r\n      totalCo2 = data\r\n    }\r\n    return totalCo2\r\n  }\r\n}\r\n\r\nexport default Co2EmissionService\r\n","import connector from './connector'\r\n\r\nlet totalPopulation: any\r\n\r\nclass MunicipalityService {\r\n  static async getMunicipalities () {\r\n    const { data } = await connector.get('/municipalities/')\r\n    return data\r\n  }\r\n\r\n  static async getTotalPopulation () {\r\n    if (!totalPopulation) {\r\n      const { data } = await connector.get('/population/')\r\n      totalPopulation = data\r\n    }\r\n    return totalPopulation\r\n  }\r\n}\r\n\r\nexport default MunicipalityService\r\n","import connector from './connector'\r\n\r\nlet offsetAgents: any\r\nclass OffsetAgentService {\r\n  static async getOffsetAgents () {\r\n    if (!offsetAgents) {\r\n      const { data } = await connector.get('/offsetAgents/')\r\n      offsetAgents = data\r\n    }\r\n    return offsetAgents\r\n  }\r\n}\r\n\r\nexport default OffsetAgentService\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button as BootstrapButton } from 'reactstrap'\r\n\r\nimport { Spinner } from 'components'\r\n\r\nimport './Button.scss'\r\n\r\ntype ButtonProps = {\r\n  children: any,\r\n  className?: string,\r\n  loading?: boolean,\r\n  disabled?: boolean,\r\n  link?: string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Button = ({ children, className, loading, disabled, link, ...rest }: ButtonProps) => {\r\n  const classes = ['button-component']\r\n  if (className) {\r\n    classes.push(className)\r\n  }\r\n\r\n  return (\r\n    <BootstrapButton\r\n      className={classes.join(' ')}\r\n      disabled={disabled || loading}\r\n      tag={link ? Link : undefined}\r\n      to={link || undefined}\r\n      {...rest}\r\n    >\r\n      {loading && (\r\n        <Spinner size={1} />\r\n      )}\r\n      {children}\r\n    </BootstrapButton>\r\n  )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport { FaFacebook } from 'react-icons/fa'\r\n\r\nimport { IconButton } from 'components'\r\n\r\nimport './FacebookButton.scss'\r\n\r\ntype FacebookButtonProps = {\r\n  onClick(): void,\r\n  text: string\r\n}\r\n\r\nconst FacebookButton = ({ onClick, text }: FacebookButtonProps) => (\r\n  <IconButton\r\n    className='facebook-button-component'\r\n    onClick={onClick}\r\n    text={text}\r\n    icon={FaFacebook}\r\n  />\r\n)\r\n\r\nexport default FacebookButton\r\n","import React from 'react'\r\n\r\nimport { Button } from 'components'\r\n\r\ntype IconButtonProps = {\r\n  icon: any,\r\n  text: string,\r\n  subtext?:string,\r\n  [rest:string]: any\r\n}\r\n\r\nconst IconButton = ({ icon, text, subtext, ...rest }: IconButtonProps) => {\r\n  const Icon = icon\r\n  return (\r\n    <Button {...rest}>\r\n      <Icon className={`${text ? 'mr-1' : ''}`} /> {text} {subtext ? \"\\n\" + subtext : \"\"}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default IconButton\r\n","import React from 'react'\r\nimport { Navbar, Container } from 'reactstrap'\r\n\r\nimport { ParticipantHeaderStatus } from 'components'\r\n\r\nimport './Header.scss'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Container className='header-component'>\r\n      <Navbar>\r\n        <div />\r\n\r\n        <ParticipantHeaderStatus />\r\n      </Navbar>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","class FormatUtils {\r\n  static getFirstName (name: string) {\r\n    return name.split(' ')[0]\r\n  }\r\n\r\n  static thousandSeparator (num: number) {\r\n    return num.toString().replace('.', ',').replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\r\n  }\r\n\r\n  static currency (num: number) {\r\n    return `Kr. ${this.thousandSeparator(num)}`\r\n  }\r\n\r\n  static round (num: number, decimalPoint: number = 0) {\r\n    return (Math.round(num * 10 ** decimalPoint) / (10 ** decimalPoint)).toString().replace('.', ',')\r\n  }\r\n}\r\n\r\nexport default FormatUtils\r\n","class FormUtils {\r\n  static async submitForm (formName: string) {\r\n    document?.getElementById(`${formName}SubmitButton`)?.click()\r\n  }\r\n\r\n  static async resetForm (formName: any) {\r\n    document.forms[formName].reset()\r\n  }\r\n}\r\n\r\nexport default FormUtils\r\n","import React from 'react'\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\r\nimport { FaLeaf } from 'react-icons/fa'\r\n\r\nimport { IconButton } from 'components'\r\nimport { FormatUtils } from 'utils'\r\nimport { Participant } from 'types'\r\n\r\ntype ParticipantDropdownProps = {\r\n  participant?: Participant,\r\n  logout(): void,\r\n  myPurchases() : void\r\n}\r\n\r\nconst ParticipantDropdown = ({ participant, logout, myPurchases }: ParticipantDropdownProps) => (\r\n  <>\r\n    <UncontrolledDropdown nav inNavbar>\r\n      <DropdownToggle nav>\r\n        <IconButton\r\n          text={FormatUtils.getFirstName( participant ? participant.name : \"\")}\r\n          subtext = {(participant?.title || \"\") + \"\\n\" +  FormatUtils.thousandSeparator(Math.round((participant?.co2Offset || 0) * 10)) + \" tré\"}\r\n          icon={FaLeaf}\r\n        />\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <DropdownItem onClick={myPurchases}>\r\n          Skógurinn minn\r\n        </DropdownItem>\r\n        <DropdownItem divider />\r\n        <DropdownItem onClick={logout}>\r\n          Útskrá\r\n        </DropdownItem>\r\n      </DropdownMenu>\r\n    </UncontrolledDropdown>\r\n  </>\r\n)\r\n\r\nexport default ParticipantDropdown\r\n","type EnvParams = {\r\n  api: string\r\n}\r\n\r\nconst production: EnvParams = {\r\n  api: 'https://api.jofnumokkur.xyz/v1'\r\n}\r\n\r\nconst local: EnvParams = {\r\n  api: 'http://127.0.0.1:8000/v1'\r\n}\r\n\r\n// const env = process.env.REACT_APP_ENV\r\nconst env = 'production';\r\n\r\nconst envParams: EnvParams = (\r\n  env === 'production'\r\n    ? production\r\n    : local\r\n)\r\n\r\nexport default envParams\r\n","import axios from 'axios'\r\n\r\nimport EnvParams from 'environment'\r\n\r\nconst connector = axios.create({\r\n  baseURL: `${EnvParams.api}`,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-type': 'application/json'\r\n  }\r\n})\r\n\r\nexport default connector\r\n","import connector from \"./connector\";\r\n\r\nclass ParticipantService {\r\n  static async getParticipant(body: { email: string; name: string }) {\r\n    const { data } = await connector.post(\"/participant/\", body);\r\n    return data;\r\n  }\r\n\r\n  static async getParticipants() {\r\n    const { data } = await connector.get(\"/participants/\");\r\n\r\n    return data;\r\n  }\r\n\r\n  static async getLeaderboard() {\r\n    const { data } = await connector.get(\"/leaderboard/\");\r\n    return data;\r\n  }\r\n}\r\n\r\nexport default ParticipantService;\r\n","import connector from './connector'\r\n\r\nimport { Purchase } from 'types'\r\n\r\nclass PurchaseService {\r\n  static async getTotalOffset () {\r\n    const { data } = await connector.get('/totalOffset/')\r\n    return data\r\n  }\r\n\r\n  static async getNewestPurchases () {\r\n    const { data } = await connector.get('/newestPurchases/')\r\n    return data\r\n  }\r\n\r\n  static async createPurchase (body: Purchase) {\r\n    const { data } = await connector.post('/purchase/', body)\r\n    return data\r\n  }\r\n}\r\n\r\nexport default PurchaseService\r\n","import { createStateLink } from '@hookstate/core'\r\n\r\nimport { ParticipantService } from 'services'\r\nimport { Participant } from 'types'\r\n\r\nconst defaultParticipant = {\r\n  name: '',\r\n  email: '',\r\n  co2Offset: 0,\r\n  title: ''\r\n}\r\n\r\nexport const ParticipantState = createStateLink(defaultParticipant)\r\n\r\nexport const setParticipant = (participant?: Participant) => {\r\n  console.log(participant)\r\n  ParticipantState.set(participant || defaultParticipant)\r\n}\r\n\r\nexport const updateCo2 = async () => {\r\n  const current = ParticipantState.get()\r\n  const { co2Offset, title } = await ParticipantService.getParticipant(current)\r\n  ParticipantState.set({ ...current, co2Offset, title })\r\n}\r\n","/* global FB */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useStateLink } from '@hookstate/core'\r\n\r\nimport { FacebookButton, ParticipantDropdown, MyPurchasesModal } from 'components'\r\nimport { ParticipantService, MunicipalityService, Co2EmissionService } from 'services'\r\nimport { Participant, Municipality,} from 'types'\r\nimport { ParticipantState, setParticipant } from 'states'\r\n\r\nconst UserHeaderStatus = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const participant: Participant = useStateLink(ParticipantState).get()\r\n  const [openModal, setOpenModal] = useState(\"\");\r\n\r\n  const [totalCo2, setTotalCo2] = useState(0);\r\n  const [totalPopulation, setTotalPopulation] = useState(0);\r\n  const [municipalities, setMunicipalities]: [Municipality[], any] = useState(\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    getMunicipalities();\r\n    getTotalPopulation();\r\n    getTotalCo2();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getMunicipalities = async () => {\r\n    try {\r\n      const response = await MunicipalityService.getMunicipalities().catch(\r\n        error => console.log(error)\r\n      );\r\n      response.sort(\r\n        (a: Municipality, b: Municipality) =>\r\n          b.co2Offset / a.population - a.co2Offset / b.population\r\n      );\r\n      setMunicipalities(response);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getTotalPopulation = async () => {\r\n    const population = await MunicipalityService.getTotalPopulation().catch(\r\n      error => console.log(error)\r\n    );\r\n    setTotalPopulation(population);\r\n  };\r\n\r\n  const getTotalCo2 = async () => {\r\n    const co2 = await Co2EmissionService.getTotalCo2().catch(error =>\r\n      console.log(error)\r\n    );\r\n    setTotalCo2(co2);\r\n  };\r\n\r\n  const checkFacebookStatus = () => {\r\n    setLoading(true)\r\n    if (typeof FB !== 'undefined') {\r\n      FB.getLoginStatus((response: any) => {\r\n        if (response.status === 'connected') {\r\n          getFacebookInfo()\r\n        } else {\r\n          setLoading(false)\r\n        }\r\n      })\r\n    } else {\r\n      setTimeout(() => {\r\n        checkFacebookStatus()\r\n      }, 300)\r\n    }\r\n  }\r\n  const openPurchasesModal = () => {\r\n    setOpenModal('my-purchases');\r\n  }\r\n  const facebookLogout = () => {\r\n    FB.logout(() => {\r\n      setParticipant()\r\n    })\r\n  }\r\n\r\n  const facebookLogin = () => {\r\n    FB.login(() => {\r\n      getFacebookInfo()\r\n    }, { scope: 'public_profile,email' })\r\n  }\r\n\r\n  const getFacebookInfo = () => {\r\n    FB.api('/me', { fields: 'name, email' }, async (response: any) => {\r\n      try {\r\n        if (!response.error) {\r\n          const currentParticipant = await ParticipantService.getParticipant(response)\r\n          setParticipant({ ...response, ...currentParticipant })\r\n        }\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkFacebookStatus()\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const UserState = () => {\r\n    if (loading) {\r\n      return null\r\n    } else if (!participant ?.name) {\r\n      return <FacebookButton onClick={facebookLogin} text='Innskrá með Facebook' />\r\n    }\r\n    return (\r\n      <div>\r\n        <ParticipantDropdown\r\n          participant={participant}\r\n          logout={facebookLogout}\r\n          myPurchases={openPurchasesModal}\r\n        />\r\n        <MyPurchasesModal\r\n          isOpen={openModal === \"my-purchases\"}\r\n          toggle={() => setOpenModal(\"\")}\r\n          emissionPerPerson={totalCo2 / totalPopulation}\r\n          municipalities={municipalities}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <UserState />\r\n}\r\n\r\nexport default UserHeaderStatus\r\n","import React from 'react'\r\nimport useForm, { FormContext } from 'react-hook-form'\r\n\r\ntype FormProps = {\r\n  children: any,\r\n  name: string,\r\n  validationSchema: any,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Form = ({ children, name, onSubmit, validationSchema, ...rest }: FormProps) => {\r\n  const methods = useForm({\r\n    validationSchema\r\n  })\r\n  return (\r\n    <FormContext {...methods}>\r\n      <form\r\n        onSubmit={methods.handleSubmit(onSubmit)}\r\n        name={name}\r\n        key={name}\r\n        {...rest}\r\n      >\r\n        {children}\r\n        <input className='d-none' id={`${name}SubmitButton`} type='submit' />\r\n      </form>\r\n    </FormContext>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport { Label } from 'reactstrap'\r\n\r\nimport './Inputs.scss'\r\n\r\ntype FormInputProps = {\r\n  name: string,\r\n  label: string,\r\n  onChange?(value: any): void,\r\n  [rest:string]: any\r\n}\r\n\r\nconst FormInput = ({ name, label, onChange, ...rest }: FormInputProps) => {\r\n  const { register, errors } = useFormContext()\r\n  const hasError = errors && errors[name]\r\n  const inputClasses = ['form-control']\r\n  hasError && inputClasses.push('hasError')\r\n  return (\r\n    <div className='input-component'>\r\n      {label && <Label>{label}</Label>}\r\n      <input\r\n        className={inputClasses.join(' ')}\r\n        ref={register}\r\n        name={name}\r\n        onChange={(e) => onChange && onChange(e?.target?.value)}\r\n        {...rest}\r\n      />\r\n      {hasError && (\r\n        <div className='error'>{errors[name]?.message}</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormInput\r\n","import React, { useEffect, useState } from 'react'\r\nimport Select from 'react-select'\r\nimport { Label } from 'reactstrap'\r\nimport { useFormContext } from 'react-hook-form'\r\n\r\ntype FormSearchableSelectProps = {\r\n  defaultValue?: any,\r\n  label: string,\r\n  name: string,\r\n  onChange?(value: any): void,\r\n  [rest:string]: any\r\n}\r\n\r\nconst FormSearchableSelect = ({ defaultValue, label, name, onChange, ...rest }: FormSearchableSelectProps) => {\r\n  const [value, setValue] = useState(defaultValue)\r\n  const [selectedOption, setSelectedOption] = useState()\r\n  const { register, errors } = useFormContext()\r\n  const hasError = errors && errors[name]\r\n\r\n  useEffect(() => {\r\n    handleChange(defaultValue)\r\n    // eslint-disable-next-line\r\n  }, [defaultValue])\r\n\r\n  const handleChange = (value: any) => {\r\n    let parsedValue\r\n    if (Array.isArray(value)) {\r\n      parsedValue = value.map((v) => v.value).join(';;;')\r\n    } else {\r\n      parsedValue = value ? value.value : ''\r\n    }\r\n    setValue(parsedValue)\r\n    setSelectedOption(value)\r\n    onChange && onChange(parsedValue)\r\n  }\r\n\r\n  return (\r\n    <div className='searchable-select input-component'>\r\n      {label && <Label>{label}</Label>}\r\n      <Select\r\n        onChange={handleChange}\r\n        value={selectedOption}\r\n        {...rest}\r\n      />\r\n      <input\r\n        className='d-none'\r\n        name={name}\r\n        ref={register}\r\n        value={value || ''}\r\n        readOnly\r\n      />\r\n      {hasError && (\r\n        <div className='error'>{errors[name]?.message}</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormSearchableSelect\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport ReactSwitch from 'react-switch'\r\n\r\nimport { Label } from 'reactstrap'\r\n\r\ntype FormSwitchProps = {\r\n  label: string,\r\n  name: string,\r\n  defaultValue?: boolean,\r\n  onChange?(value: any): void,\r\n  [rest:string]: any\r\n}\r\n\r\nconst FormSwitch = ({ label, name, defaultValue = false, onChange, ...rest }: FormSwitchProps) => {\r\n  const [checked, setChecked] = useState(defaultValue)\r\n  const { register, errors } = useFormContext()\r\n  const hasError = errors && errors[name]\r\n\r\n  useEffect(() => {\r\n    setChecked(defaultValue)\r\n  }, [defaultValue])\r\n\r\n  const toggleChange = (value: any) => {\r\n    setChecked(value)\r\n    onChange && onChange(value)\r\n  }\r\n\r\n  return (\r\n    <div className='input-component switch-component'>\r\n      {label && <Label>{label}</Label>}\r\n      <div>\r\n        <ReactSwitch\r\n          onChange={(e) => toggleChange(e)}\r\n          checked={checked}\r\n          {...rest}\r\n        />\r\n        <input\r\n          className='d-none'\r\n          name={name}\r\n          ref={register}\r\n          type='checkbox'\r\n          checked={checked}\r\n          readOnly\r\n          {...rest}\r\n        />\r\n      </div>\r\n      {hasError && (\r\n        <div className='error'>{errors[name]?.message}</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormSwitch\r\n","import React from 'react'\r\nimport { useFormContext } from 'react-hook-form'\r\nimport { Label } from 'reactstrap'\r\n\r\nimport './Inputs.scss'\r\n\r\ntype FormTextareaProps = {\r\n  label: string,\r\n  name: string,\r\n  rows?: number,\r\n  [rest:string]: any\r\n}\r\n\r\nconst FormTextarea = ({ label, name, rows = 5, ...rest }: FormTextareaProps) => {\r\n  const { register, errors } = useFormContext()\r\n  const hasError = errors && errors[name]\r\n  return (\r\n    <div className='input-component'>\r\n      {label && <Label>{label}</Label>}\r\n      <textarea\r\n        className='form-control'\r\n        ref={register}\r\n        rows={rows}\r\n        name={name}\r\n        {...rest}\r\n      />\r\n      {hasError && (\r\n        <div className='error'>{errors[name]?.message}</div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FormTextarea\r\n","import { Col } from 'reactstrap'\r\n\r\nexport default Col\r\n","import { Row } from 'reactstrap'\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport { Modal as BootstrapModal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nimport './Modal.scss'\r\n\r\ntype ModalProps = {\r\n  className?: string,\r\n  children?: any,\r\n  header?: string,\r\n  footer?: any,\r\n  [rest:string]: any\r\n}\r\n\r\nconst Modal = ({ className, header, footer, children, ...rest }: ModalProps) => {\r\n  const classes = ['modal-component']\r\n  if (className) {\r\n    classes.push(className)\r\n  }\r\n  return (\r\n    <BootstrapModal\r\n      className={classes.join(' ')}\r\n      {...rest}\r\n    >\r\n      {header && (<ModalHeader>{header}</ModalHeader>)}\r\n      {children && (<ModalBody>{children}</ModalBody>)}\r\n      {footer && (<ModalFooter>{footer}</ModalFooter>)}\r\n    </BootstrapModal>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import React from 'react'\r\n\r\nimport { Modal, MunicipalityProgress } from 'components'\r\nimport { Municipality } from 'types'\r\n\r\nimport './MunicipalitiesModal.scss'\r\n\r\ntype MunicipalitiesModalProps = {\r\n  municipalities: Municipality[],\r\n  totalPopulation: number,\r\n  totalCo2: number,\r\n  [rest:string]: any\r\n}\r\n\r\nconst MunicipalitiesModal = ({ municipalities, totalPopulation, totalCo2, ...rest }: MunicipalitiesModalProps) => {\r\n\r\n\r\n  return (\r\n    <Modal\r\n      className='municipalities-modal-component'\r\n      size='xl'\r\n      header='Staða sveitarfélaga'\r\n      {...rest}\r\n    >\r\n      <div className=\"municipalities-progress\">\r\n        {municipalities.map((m, idx) => (\r\n          <MunicipalityProgress\r\n            key={m.id}\r\n            municipality={m}\r\n            totalPopulation={totalPopulation}\r\n            totalCo2={totalCo2}\r\n            rank={idx + 1}\r\n          />\r\n        ))}\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default MunicipalitiesModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Label, Progress } from 'reactstrap'\r\nimport { useStateLink } from '@hookstate/core'\r\n\r\nimport { Modal, Form, Row, Col, FormInput, FormSearchableSelect, FormTextarea, OffsetAgentSelector, FormSwitch, Button } from 'components'\r\nimport { OffsetAgent, Participant, Municipality } from 'types'\r\nimport { FormatUtils, FormUtils } from 'utils'\r\nimport { ParticipantState, updateCo2 } from 'states'\r\nimport { PurchaseService } from 'services'\r\n\r\nimport * as yup from 'yup'\r\n\r\nimport './PurchaseModal.scss'\r\n\r\ntype PurchaseModalProps = {\r\n  offsetAgents: OffsetAgent[],\r\n  emissionPerPerson: number,\r\n  municipalities: Municipality[],\r\n  onSubmit(): void,\r\n  [rest:string]: any\r\n}\r\n\r\nconst formName = 'purchaseForm'\r\nconst schema = yup.object().shape({\r\n  participantName: yup.string()\r\n    .required('Þú verður að skrá nafn kaupanda'),\r\n  participantEmail: yup.string().email('Netfang ekki á réttu formi')\r\n    .required('Þú verður að skrá netfang kaupanda'),\r\n  quantity: yup.number().required('Þú verður að skrá magn').min(1, 'Ekki er hægt að kaupa minna en 1stk'),\r\n  receiverEmail: yup.string().email('Netfang ekki á réttu formi').when('gift', (gift: boolean, schema: any) => {\r\n    return gift ? schema.required('Þú verður að skrá e-mail viðtakanda') : schema\r\n  }),\r\n  receiverName: yup.string().when('gift', (gift: boolean, schema: any) => {\r\n    return gift ? schema.required('Þú verður að skrá nafn viðtakanda') : schema\r\n  })\r\n})\r\n\r\nlet previuosProgress = 0\r\nconst PurchaseModal = ({ offsetAgents, emissionPerPerson, municipalities, onSubmit, ...rest }: PurchaseModalProps) => {\r\n  const [selectedOffsetAgent, setSelectedOffsetAgent]: [OffsetAgent, any] = useState(offsetAgents[0])\r\n  const [quantity, setQuantity]: [number, any] = useState(1)\r\n  const participant: Participant = useStateLink(ParticipantState).get()\r\n  const [gift, setGift] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  if (participant.co2Offset) {\r\n    previuosProgress = 100 * participant.co2Offset / emissionPerPerson\r\n  }\r\n  const currentProgress = 100 * quantity * selectedOffsetAgent?.co2PerItem / emissionPerPerson\r\n  let remaining = 100 - previuosProgress - currentProgress\r\n  if (remaining < 0) {\r\n    remaining = 0\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSelectedOffsetAgent(offsetAgents[0])\r\n  }, [offsetAgents])\r\n\r\n  const submit = async (data: any) => {\r\n    setLoading(true)\r\n    try {\r\n      const body = {\r\n        ...data,\r\n        costPerItem: selectedOffsetAgent.costPerItem,\r\n        totalCo2: selectedOffsetAgent.co2PerItem * quantity,\r\n        offsetAgent: selectedOffsetAgent.id\r\n      }\r\n      PurchaseService.createPurchase(body)\r\n      setTimeout(() => {\r\n        setLoading(false)\r\n        participant && updateCo2()\r\n        onSubmit()\r\n      }, 1000)\r\n    } catch (e) {\r\n      console.log(e)\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const setAgent = (agent: OffsetAgent) => {\r\n    setSelectedOffsetAgent(agent)\r\n    setQuantity(1)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='purchase-modal-component'\r\n      header='Jafnaðu þig'\r\n      size='xl'\r\n      {...rest}\r\n    >\r\n      <OffsetAgentSelector\r\n        offsetAgents={offsetAgents}\r\n        selected={selectedOffsetAgent}\r\n        onSelect={(agent: OffsetAgent) => setAgent(agent)}\r\n      />\r\n      <Form\r\n        name={formName}\r\n        onSubmit={submit}\r\n        validationSchema={schema}\r\n      >\r\n        <div className='quantity'>\r\n          <Row>\r\n            <Col md={3}>\r\n              <Label>Verkefni</Label>\r\n              <div>\r\n                {selectedOffsetAgent?.itemLabel}\r\n              </div>\r\n            </Col>\r\n            <Col md={3}>\r\n              <FormInput\r\n                name='quantity'\r\n                label='Magn'\r\n                type='number'\r\n                value={quantity}\r\n                onChange={(value) => setQuantity(value)}\r\n                min={1}\r\n              />\r\n              <div className='mt-2'>\r\n                <Label className='mr-2'>Kolefnisjöfnun:</Label>\r\n                {FormatUtils.round(selectedOffsetAgent?.co2PerItem * quantity, 1)} tonn af CO2\r\n              </div>\r\n            </Col>\r\n            <Col md={3} className='text-right'>\r\n              <Label>\r\n                Verð/eining\r\n              </Label>\r\n              <div>\r\n                {selectedOffsetAgent && (FormatUtils.currency(selectedOffsetAgent?.costPerItem))}\r\n              </div>\r\n            </Col>\r\n            <Col md={3} className='text-right'>\r\n              <Label>\r\n                Samtals\r\n              </Label>\r\n              <div>\r\n                {selectedOffsetAgent && (FormatUtils.currency(selectedOffsetAgent?.costPerItem * quantity))}\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n          <div className='offset-progress'>\r\n            <Label>Kolefnisjöfnun þín fyrir árið 2020</Label>\r\n            <Progress multi>\r\n              <Progress className='previuos' bar value={previuosProgress}>{FormatUtils.round(previuosProgress, 1)}%</Progress>\r\n              <Progress className='current' bar value={currentProgress}>{FormatUtils.round(currentProgress, 1)}%</Progress>\r\n              <Progress className='remaining' bar value={remaining} />\r\n            </Progress>\r\n          </div>\r\n        </div>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormInput\r\n              name='participantName'\r\n              label='Nafn kaupanda'\r\n              placeholder='Nafnið þitt'\r\n              defaultValue={participant?.name}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormInput\r\n              name='participantEmail'\r\n              type='email'\r\n              label='Netfang kaupanda'\r\n              placeholder='Netfangið þitt'\r\n              defaultValue={participant?.email}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <FormSearchableSelect\r\n              name='municipality'\r\n              label='Sveitarfélag'\r\n              placeholder='Valkvæmt: Veldu sveitarfélag'\r\n              options={municipalities.map((m) => ({\r\n                label: m.name,\r\n                value: m.id\r\n              }))}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormSwitch\r\n              name='gift'\r\n              label='Gefa sem gjöf'\r\n              onChange={(value) => setGift(value)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <div className={`${gift ? '' : 'd-none'}`}>\r\n          <Row>\r\n            <Col md={6}>\r\n              <FormInput\r\n                name='receiverName'\r\n                label='Nafn viðtakanda'\r\n                placeholder='Nafn þess sem þú vilt kolefnisjafna'\r\n              />\r\n            </Col>\r\n            <Col md={6}>\r\n              <FormInput\r\n                name='receiverEmail'\r\n                type='email'\r\n                label='Netfang viðtakanda'\r\n                placeholder='Netfang þess sem þú vilt kolefnisjafna'\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={12}>\r\n              <FormTextarea\r\n                name='receiverComment'\r\n                label='Skilaboð til viðtakanda'\r\n                placeholder='Hæhæ, mig langaði bara rosalega til að kolefnisjafna þig!'\r\n                rows={3}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Form>\r\n      <div className='confirm'>\r\n        <Button\r\n          onClick={() => FormUtils.submitForm(formName)}\r\n          loading={loading}\r\n        >\r\n          Staðfesta\r\n        </Button>\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default PurchaseModal\r\n","/* global FB */\r\nimport React from \"react\";\r\n\r\nimport { useStateLink } from \"@hookstate/core\";\r\n\r\nimport { Modal, Row, ProgressBar, FacebookButton } from \"components\";\r\nimport { Participant } from \"types\";\r\nimport { FormatUtils } from \"utils\";\r\nimport { ParticipantState } from \"states\";\r\n\r\nimport \"./MyPurchasesModal.scss\";\r\n\r\ntype MyPurchasesModalProps = {\r\n  emissionPerPerson: number;\r\n  [rest: string]: any;\r\n};\r\n\r\nlet progress = 0;\r\nconst MyPurchasesModal = ({ emissionPerPerson, ...rest }: MyPurchasesModalProps) => {\r\n  const progressBarDuration = 2500;\r\n\r\n  const co2PerItem = 10;\r\n  const participant: Participant = useStateLink(ParticipantState).get();\r\n\r\n  if (participant.co2Offset) {\r\n    progress = (participant.co2Offset) / emissionPerPerson;\r\n  }\r\n\r\n  const shareOnFacebook = () => {\r\n    FB.ui({\r\n      method: 'share',\r\n      href: 'https://jofnumokkur.xyz',\r\n      quote: 'Ég er búinn að standa mig vel í kolefnisjöfnun, hvað með þig?'\r\n    }, (response) => {\r\n\r\n    })\r\n  }\r\n\r\n  \r\n  const treeCount = co2PerItem * participant.co2Offset;\r\n  var treeAnimationStep = progressBarDuration/treeCount;\r\n  var treeAnimationStatus = 0;\r\n\r\n  const createNudgeTreeStyle = () => {\r\n    var randomMargin = () => Math.random() * 10 - 8;\r\n    var randomMaxSize = () => Math.random() * 8 + 15;\r\n    var incrementAnimationStep = () => {\r\n\r\n      return treeAnimationStatus += treeAnimationStep;\r\n    }\r\n\r\n    return {\r\n      marginLeft: randomMargin() + \"px\",\r\n      marginTop: randomMargin() + \"px\",\r\n      maxWidth: randomMaxSize() + \"px\",\r\n      animationDelay: incrementAnimationStep() + \"ms\"\r\n    }\r\n  }\r\n\r\n\r\n  var trees = [];\r\n  for (var i = 0; i < Math.min(treeCount, 1000); i++)\r\n    trees.push(<img src='/assets/tree.png' key = {i} style={createNudgeTreeStyle()} alt=\"Tré\" className=\"tree-image\" />);\r\n  const progressBarFillColor = getComputedStyle(document.documentElement)\r\n    .getPropertyValue('--green')\r\n\r\n  const progressBarTrailColor = getComputedStyle(document.documentElement)\r\n    .getPropertyValue('--progress-bar-trail')\r\n  var percentage = FormatUtils.round(progress * 100, 2);\r\n  return (\r\n    <Modal\r\n      className=\"my-purchases-modal-component\"\r\n      header=\"Skógurinn minn\"\r\n      size=\"xl\"\r\n      {...rest}\r\n    >\r\n      <Row>\r\n        <div className=\"progress-container\">\r\n          <h2 className=\"participant_title\">{participant.title}</h2>\r\n          <p>{participant.co2Offset > 10 ? \"Vel gert! \" : \"\"} Þú ert búin/n að kolefnisjafna á við {FormatUtils.thousandSeparator(Math.round(treeCount))} tré {participant.co2Offset > 0 ?  \" sem nemur \" + percentage + \"% af kolefnislosun meðal Íslendingsins\" : \"\"}</p>\r\n          {participant.co2Offset > 0 ?\r\n            <ProgressBar.Line\r\n              options={{\r\n                strokeWidth: 4,\r\n                color: progressBarFillColor,\r\n                trailColor: progressBarTrailColor,\r\n                duration: progressBarDuration,\r\n\r\n              }}\r\n              progress={Math.min(progress, 1)}\r\n              text={percentage+ \"%\"}\r\n              initialAnimate={true}\r\n            /> : null}\r\n          {participant.co2Offset === 0 ? <p className = \"click_on_frontpage_text\">Smelltu á Jafnaðu þig á forsíðunni til að byrja að kolefnisjafna strax í dag!</p> : \"\"}\r\n        </div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <div className=\"tree-container\">\r\n          {\r\n            trees\r\n          }\r\n\r\n        </div>\r\n\r\n      </Row>\r\n      <div className='share-options'>\r\n        <FacebookButton text='Deila á Facebook' onClick={() => shareOnFacebook()} />\r\n      </div>\r\n      <div className=\"icons_whodunnit\">Icons made by <a href=\"https://www.flaticon.com/free-icon/tree_740938?term=tree&page=2&position=82\" title=\"Vectors Market\">Vectors Market</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MyPurchasesModal;\r\n","/* global FB */\r\nimport React from 'react'\r\n\r\nimport { Modal, InfoSection, FacebookButton } from 'components'\r\n\r\nimport './ConfirmedModal.scss'\r\n\r\ntype ConfirmedModalProps = {\r\n  [rest:string]: any\r\n}\r\n\r\nconst ConfirmedModal = ({ municipalities, totalPopulation, totalCo2, ...rest }: ConfirmedModalProps) => {\r\n  const shareOnFacebook = () => {\r\n    FB.ui({\r\n      method: 'share',\r\n      href: 'https://jofnumokkur.xyz',\r\n      quote: 'Ég var að kolefnisjafna mig, vilt þú ekki gera það líka?'\r\n    }, (response) => {\r\n\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      className='confirmed-modal-component'\r\n      size='xl'\r\n      {...rest}\r\n    >\r\n      <InfoSection\r\n        title=\"Framlag móttekið!\"\r\n        text=\"Takk fyrir að taka fyrsta skrefið í átt að grænni framtíð.  Næsta skref er að hvetja fjölskyldu, vini, kunningja, vinnufélaga, og jú, bara hvern sem er til að gera slíkt hið sama!\"\r\n        imagePath=\"/assets/seed.png\"\r\n      />\r\n      <div className='share-options'>\r\n        <FacebookButton text='Deila á Facebook' onClick={() => shareOnFacebook()} />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ConfirmedModal\r\n","import React from 'react'\r\nimport { FaSpinner } from 'react-icons/fa'\r\n\r\nimport './Spinner.scss'\r\n\r\ntype SpinnerProps = {\r\n  size?: number\r\n}\r\n\r\nconst Spinner = ({ size = 2 }: SpinnerProps) => {\r\n  return (\r\n    <div className='spinner-component'>\r\n      <FaSpinner className='icon-spin' size={`${size}em`} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React from 'react'\r\nimport { ProgressBar } from 'components'\r\n\r\ntype ProgressBarProps = {\r\n  [rest:string]: any\r\n}\r\n\r\nconst CurvedProgressBar = ({ ...rest }: ProgressBarProps) => {\r\n  const fillColor = getComputedStyle(document.documentElement)\r\n    .getPropertyValue('--progress-bar-fill')\r\n\r\n  const trailColor = getComputedStyle(document.documentElement)\r\n    .getPropertyValue('--progress-bar-trail')\r\n\r\n  return (\r\n    <ProgressBar.SemiCircle\r\n      options={{\r\n        strokeWidth: 4,\r\n        color: fillColor,\r\n        trailColor: trailColor,\r\n        duration: 1500\r\n      }}\r\n      initialAnimate={true}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n\r\nexport default CurvedProgressBar\r\n","import React, { Component } from 'react'\r\nimport isEqual from 'lodash/isEqual'\r\nimport ProgressBar from 'progressbar.js'\r\n\r\nclass Shape extends Component {\r\n  static defaultProps = {\r\n    ShapeClass: null,\r\n    options: {},\r\n    progress: 0,\r\n    text: null,\r\n    initialAnimate: false,\r\n    containerStyle: {},\r\n    containerClassName: 'progressbar-container'\r\n  };\r\n\r\n  shape;\r\n\r\n  progressBar = React.createRef();\r\n\r\n  create (props, oldProps) {\r\n    if (this.shape) {\r\n      return\r\n    }\r\n\r\n    // setState function is not used to prevent a new render cycle\r\n    // This handling happens outside of React component's lifecycle\r\n    const container = this.progressBar.current\r\n    this.shape = new props.ShapeClass(container, props.options)\r\n    if (props.initialAnimate) {\r\n      if (oldProps) {\r\n        this.setProgress(oldProps.progress)\r\n      }\r\n\r\n      this.animateProgress(props.progress)\r\n    } else {\r\n      this.setProgress(props.progress)\r\n    }\r\n\r\n    this.setText(props.text)\r\n  }\r\n\r\n  destroy () {\r\n    if (this.shape) {\r\n      this.shape.destroy()\r\n      this.shape = null\r\n    }\r\n  }\r\n\r\n  animateProgress (progress) {\r\n    this.shape.animate(progress)\r\n  }\r\n\r\n  setProgress (progress) {\r\n    this.shape.set(progress)\r\n  }\r\n\r\n  setText (text) {\r\n    if (text) {\r\n      this.shape.setText(text)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (!isEqual(this.props.options, prevProps.options)) {\r\n      this.destroy()\r\n      this.create(this.props, prevProps)\r\n    }\r\n    this.animateProgress(this.props.progress)\r\n    this.setText(this.props.text)\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.create(this.props, null)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    this.destroy()\r\n  }\r\n\r\n  render () {\r\n    const { style, containerClassName } = this.props\r\n    return <div className={containerClassName} style={style} ref={this.progressBar} />\r\n  }\r\n}\r\n\r\nclass Line extends Component {\r\n  render () {\r\n    return <Shape {...this.props} ShapeClass={ProgressBar.Line} />\r\n  }\r\n}\r\n\r\nclass Circle extends Component {\r\n  render () {\r\n    return <Shape {...this.props} ShapeClass={ProgressBar.Circle} />\r\n  }\r\n}\r\n\r\nclass SemiCircle extends Component {\r\n  render () {\r\n    return <Shape {...this.props} ShapeClass={ProgressBar.SemiCircle} />\r\n  }\r\n}\r\n\r\nexport default {\r\n  Line,\r\n  Circle,\r\n  SemiCircle\r\n}\r\n","import React from 'react'\r\n\r\nimport { Progress } from 'reactstrap'\r\nimport { Municipality } from 'types'\r\nimport { FormatUtils } from 'utils'\r\n\r\nimport './MunicipalityProgress.scss'\r\n\r\ntype MunicipalityProgressProps = {\r\n  municipality: Municipality,\r\n  totalPopulation: number,\r\n  totalCo2: number,\r\n  rank?: number,\r\n  [rest:string]: any\r\n}\r\n\r\nconst progressCutoff = 20\r\nconst MunicipalityProgress = ({ municipality, totalPopulation, totalCo2, rank, ...rest }: MunicipalityProgressProps) => {\r\n  const co2PerPerson = totalCo2 / totalPopulation\r\n  const progress = (100 * municipality.co2Offset / (co2PerPerson * municipality.population))\r\n  const progressString = `${FormatUtils.round(progress, 1)}%`\r\n\r\n  return (\r\n    <div className='municipality-progress-component'>\r\n      <div className='name'>{rank ? `${rank}. ` : ''} {municipality.name}</div>\r\n      <Progress multi>\r\n        <Progress className='offset' bar value={progress}>{progress >= progressCutoff ? progressString : ''}</Progress>\r\n        <Progress className='remaining' bar value={100 - progress}>{progress < progressCutoff ? progressString : ''}</Progress>\r\n      </Progress>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MunicipalityProgress\r\n","import React from 'react'\r\n\r\nimport { FormatUtils } from 'utils'\r\n\r\ntype Co2CounterProps = {\r\n  totalOffset: number,\r\n  [rest: string]: any\r\n}\r\n\r\nconst Co2Counter = ({ totalOffset, ...rest }: Co2CounterProps) => (\r\n  <div {...rest}>\r\n    <p>{FormatUtils.thousandSeparator(Math.round(totalOffset * 10) / 10)}</p>\r\n    <p> tonn jöfnuð</p>\r\n  </div>\r\n)\r\n\r\nexport default Co2Counter\r\n","import React from \"react\";\r\n\r\nimport { HorizontalBar } from \"react-chartjs-2\";\r\n\r\ntype ChartProps = {\r\n  emissionData: any[];\r\n  [rest: string]: any;\r\n};\r\n\r\nconst Chart = ({ emissionData, ...rest }: ChartProps) => {\r\n\r\n  const colors = [\r\n    \"#F0DEC2\",\r\n    \"#FACAD0\",\r\n    \"#CBC3E3\",\r\n    \"#CAF7FA\",\r\n    \"#A4F088\",\r\n    \"#FA8E62\",\r\n    \"#CBC3E3\",\r\n    \"#CAFADF\",\r\n    \"#F0D784\",\r\n    \"#FA8FEA\",\r\n    \"#CBC3E3\",\r\n    \"#CAE5FA\",\r\n    \"#84F0C5\"\r\n  ];\r\n  const charTitle = \"Losun CO2 í tonnum\";\r\n  const chartTooltipBackground = getComputedStyle(\r\n    document.documentElement\r\n  ).getPropertyValue(\"--chart-tooltip-background\");\r\n\r\n  const chartTooltipColor = getComputedStyle(\r\n    document.documentElement\r\n  ).getPropertyValue(\"--chart-tooltip-color\");\r\n\r\n  emissionData = emissionData.sort((x, y) => {\r\n    return y.co2 - x.co2;\r\n  });\r\n\r\n  var sumTotal = emissionData.map(x => x.co2).reduce((x, y) => x + y);\r\n  emissionData.length = 6;\r\n  const maxTooltipCategories = colors.length;\r\n  //Prevent tooltip from becoming too large\r\n  emissionData.map(x => {\r\n    if (x.subtypes.length <= maxTooltipCategories || !x.subtypes) return x;\r\n    var lastEntryValue = x.subtypes[maxTooltipCategories].co2;\r\n    x.subtypes.length = maxTooltipCategories;\r\n    x.subtypes[maxTooltipCategories] = { name: \"Aðrir flokkar minna en\", co2: lastEntryValue };\r\n    return x;\r\n  });\r\n  var colorsIdx = 0;\r\n  let chartData = {\r\n    datasets: emissionData.map(x => {\r\n      return {\r\n        data: [x.co2],\r\n        label: x.name,\r\n        subgroups: x.subtypes.sort((z: any, y: any) => y.co2 - z.co2),\r\n        backgroundColor: colors[colorsIdx++],\r\n        hoverBorderColor: chartTooltipBackground,\r\n        hoverBorderWidth: 1.5\r\n      };\r\n    }),\r\n    label: charTitle\r\n  };\r\n\r\n  let options = {\r\n    plugins: {\r\n      labels: {\r\n        // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'\r\n        render: 'percentage',\r\n\r\n        overlap: false,\r\n        arc: true,\r\n        textShadow: true,\r\n        // text shadow intensity, default is 6\r\n        shadowBlur: 10,\r\n        fontSize: 14,\r\n        // text shadow X offset, default is 3\r\n        shadowOffsetX: -5,\r\n        fontColor: '#000',\r\n        // text shadow Y offset, default is 3\r\n        shadowOffsetY: 5,\r\n      }\r\n    },\r\n    animation: {\r\n      duation: 2000\r\n    },\r\n    legend: {\r\n      display: false\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            drawBorder: false\r\n          },\r\n          scaleLabel: {\r\n            labelString: \"Tonn af CO2 losuð\",\r\n            fontSize: 16,\r\n            fontColor: \"#ccc\",\r\n            padding: 6,\r\n            display: true\r\n          },\r\n          ticks: {\r\n            callback: function (value: number) {\r\n              return value.toLocaleString(\"IS-is\");\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      yAxes: [\r\n        {\r\n          type: \"category\",\r\n          gridLines: {\r\n            zeroLineWidth: 0,\r\n            drawOnChartArea: false,\r\n            drawBorder: false\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    responsive: true,\r\n    responsiveAnimationDuration: 0,\r\n    hover: {\r\n      mode: \"nearest\"\r\n    },\r\n    tooltips: {\r\n      mode: \"nearest\",\r\n      axis: \"y\",\r\n      intersect: false,\r\n      backgroundColor: chartTooltipBackground,\r\n      bodyFontColor: chartTooltipColor,\r\n      titleFontColor: chartTooltipColor,\r\n      titleFontSize: 20,\r\n      bodyFontSize: 14,\r\n      bodySpacing: 3,\r\n      titleAlign: \"center\",\r\n      callbacks: {\r\n        title: function (tooltipItem: any, data: any) {\r\n\r\n          tooltipItem = tooltipItem[0];\r\n          return data.datasets[tooltipItem.datasetIndex].label;\r\n        },\r\n        label: function (tooltipItem: any, data: any) {\r\n          var label = data.datasets[tooltipItem.datasetIndex].subgroups.map(\r\n            (x: any) => {\r\n              var percentage = Math.round((x.co2 / sumTotal) * 1000) / 10;\r\n              return x.name + \": \" + percentage + \"%\";\r\n            }\r\n          );\r\n\r\n          return label;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart_container\">\r\n      <h2 className=\"header_style\">Hvar losum við mest?</h2>\r\n      <HorizontalBar data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport 'chartjs-plugin-labels';\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\ntype DoughtnutChartProps = {\r\n  emissionData: any[];\r\n  [rest: string]: any;\r\n};\r\n\r\nconst DoughnutChart = ({ emissionData, ...rest }: DoughtnutChartProps) => {\r\n\r\n  const colors = [\r\n    \"#F0DEC2\",\r\n    \"#FACAD0\",\r\n    \"#CBC3E3\",\r\n    \"#CAF7FA\",\r\n    \"#A4F088\",\r\n    \"#FA8E62\",\r\n    \"#CBC3E3\",\r\n    \"#CAFADF\",\r\n    \"#F0D784\",\r\n    \"#FA8FEA\",\r\n    \"#CBC3E3\",\r\n    \"#CAE5FA\",\r\n    \"#84F0C5\"\r\n  ];\r\n\r\n  const chartTooltipBackground = getComputedStyle(\r\n    document.documentElement\r\n  ).getPropertyValue(\"--chart-tooltip-background\");\r\n\r\n  const chartTooltipColor = getComputedStyle(\r\n    document.documentElement\r\n  ).getPropertyValue(\"--chart-tooltip-color\");\r\n\r\n  emissionData = emissionData.sort((x, y) => {\r\n    return y.co2 - x.co2;\r\n  });\r\n // var sumTotal = emissionData.map(x => x.co2).reduce((x, y) => x + y);\r\n\r\n  emissionData.length = 6;\r\n  var tempArr: any[] = [];\r\n  emissionData.map(x => (tempArr = tempArr.concat(x.subtypes)));\r\n  emissionData = tempArr;\r\n  emissionData.length = colors.length;\r\n\r\n  let chartData = {\r\n    datasets: [\r\n      {\r\n        data: emissionData.map(x => x.co2),\r\n        backgroundColor: colors,\r\n        hoverBorderColor: \"rgba(0,0,0,0.5\",\r\n        hoverBorderWidth: 1,\r\n        borderAlign: \"inner\"\r\n      }\r\n    ],\r\n    labels: emissionData.map(x => x.name)\r\n  };\r\n\r\n  let options = {\r\n    plugins: {\r\n      labels: {\r\n        // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'\r\n        render:  function (args: any) {\r\n          // args will be something like:\r\n          // { label: 'Label', value: 123, percentage: 50, index: 0, dataset: {...} }\r\n          return args.percentage + '% - ' + args.label;\r\n      \r\n          // return object if it is image\r\n          // return { src: 'image.png', width: 16, height: 16 };\r\n        },\r\n\r\n        overlap: false,\r\n        arc: true,\r\n        textShadow: true,\r\n        // text shadow intensity, default is 6\r\n        shadowBlur: 10,\r\n        fontSize: 14,\r\n        // text shadow X offset, default is 3\r\n        shadowOffsetX: -5,\r\n        fontColor: '#000',\r\n        // text shadow Y offset, default is 3\r\n        shadowOffsetY: 5,\r\n      }\r\n    },\r\n    animation: {\r\n      duation: 0\r\n    },\r\n    legend: {\r\n      fullWidth: false,\r\n      display:false,  //kemur skelfilega út á síma ef þetta er, finna eh skítmix\r\n      position:'left',\r\n      labels:{\r\n        padding:15\r\n      }\r\n    },\r\n    responsive: true,\r\n    responsiveAnimationDuration: 500,\r\n    hover: {\r\n      mode: \"index\"\r\n    },\r\n    tooltips: {\r\n      mode: \"index\",\r\n\r\n      intersect: true,\r\n      backgroundColor: chartTooltipBackground,\r\n      bodyFontColor: chartTooltipColor,\r\n      titleFontColor: chartTooltipColor,\r\n      titleFontSize: 20,\r\n      bodyFontSize: 14,\r\n      bodySpacing: 3,\r\n      titleAlign: \"center\",\r\n      callbacks: {\r\n        title: function(tooltipItem: any, data: any) {\r\n\r\n          tooltipItem = tooltipItem[0];\r\n          return data.datasets[tooltipItem.datasetIndex].label;\r\n        },\r\n        label: function(tooltipItem: any, data: any) {\r\n          var dataEntry = data.datasets[tooltipItem.datasetIndex];\r\n          var value = dataEntry.data[tooltipItem.index];\r\n          var label = data.labels[tooltipItem.index];\r\n          return label + \": \" + value.toLocaleString(\"IS-is\") + \" tonn af CO2\";\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chart_container\">\r\n      <Doughnut data={chartData} options={options}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoughnutChart;\r\n","import React from \"react\";\r\n\r\nimport './InfoSection.scss'\r\n\r\ntype InfoSectionProps = {\r\n  text?: string;\r\n  title?: string;\r\n  imagePath?: string;\r\n\r\n  [rest: string]: any;\r\n};\r\n\r\nconst Button = ({ text, title, imagePath, ...rest }: InfoSectionProps) => {\r\n  return (\r\n    <section className=\"info_section\" {...rest}>\r\n      <img alt=\"Jöfnum okkur\" src={imagePath} />\r\n      <h2 className=\"header_style\">{title}</h2>\r\n      <p>{text}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react'\r\n\r\nimport { OffsetAgent } from 'types'\r\n\r\nimport './OffsetAgentSelector.scss'\r\n\r\ntype OffsetAgentSelectorProps = {\r\n  offsetAgents: OffsetAgent[],\r\n  onSelect(agent: OffsetAgent): void,\r\n  selected: OffsetAgent,\r\n  [rest:string]: any\r\n}\r\n\r\ntype TileProps = {\r\n  agent: OffsetAgent\r\n}\r\n\r\nconst OffsetAgentSelector = ({ offsetAgents, onSelect, selected, ...rest }: OffsetAgentSelectorProps) => {\r\n  const Tile = ({ agent }: TileProps) => (\r\n    <div className={`tile${selected?.id === agent?.id ? ' selected' : ''}`} onClick={() => onSelect(agent)}>\r\n      <img alt='Carbon offset agent' src={`assets/agent${agent.id}.png`} />\r\n      <div className='info'>\r\n        <div className='name'>\r\n          {agent.name}\r\n        </div>\r\n        <div className='item'>\r\n          {agent.itemLabel}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n  return (\r\n    <div className='offset-agent-selector-component'>\r\n      {offsetAgents.map((agent: OffsetAgent) => (\r\n        <Tile\r\n          key={agent.id}\r\n          agent={agent}\r\n        />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OffsetAgentSelector\r\n","import React, { useState, useEffect } from 'react'\r\nimport ReactTooltip from 'react-tooltip'\r\n\r\nimport { Button, CurvedProgressBar, Co2Counter, MunicipalityProgress, InfoSection, Chart, DoughnutChart, ConfirmedModal, MunicipalitiesModal,  PurchaseModal } from 'components'\r\nimport { Co2EmissionService, PurchaseService, MunicipalityService, OffsetAgentService, ParticipantService } from 'services'\r\nimport { Municipality, NewPurchase, LeaderBoardParticipant } from 'types'\r\nimport { FormatUtils } from 'utils'\r\n\r\nimport './Home.scss'\r\n\r\nconst Home = () => {\r\n  const [openModal, setOpenModal] = useState(\"\");\r\n  const [totalOffset, setTotalOffset] = useState(0);\r\n  const [totalCo2, setTotalCo2] = useState(0);\r\n  const [newestPurchases, setNewestPurchases]: [NewPurchase[], any] = useState([]);\r\n  const [leaderboard, setLeaderboard]: [LeaderBoardParticipant[], any] = useState([]);\r\n  const [totalPopulation, setTotalPopulation] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [emissionTypes, setEmissionTypes]: [any[], any] = useState([]);\r\n  const [offsetAgents, setOffsetAgents]: [any[], any] = useState([]);\r\n  const [municipalities, setMunicipalities]: [Municipality[], any] = useState(\r\n    []\r\n  );\r\n\r\n  const getAllProgress = () => {\r\n    getProgress();\r\n    getMunicipalities();\r\n    getNewestPurchases();\r\n    getLeaderboard();\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllProgress();\r\n    getTotalPopulation();\r\n    getTotalCo2();\r\n    getEmissionTypes();\r\n    getOffsetAgents();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const getOffsetAgents = async () => {\r\n    const agents = await OffsetAgentService.getOffsetAgents().catch(error =>\r\n      console.log(error)\r\n    );\r\n    setOffsetAgents(agents);\r\n  };\r\n\r\n  const getNewestPurchases = async () => {\r\n    const purchases = await PurchaseService.getNewestPurchases().catch(error =>\r\n      console.log(error)\r\n    );\r\n    setNewestPurchases(purchases);\r\n  };\r\n\r\n  const getLeaderboard = async () => {\r\n    const response = await ParticipantService.getLeaderboard().catch(error =>\r\n      console.log(error)\r\n    );\r\n    setLeaderboard(response);\r\n  };\r\n\r\n  const getEmissionTypes = async () => {\r\n    let types = await Co2EmissionService.getCo2EmissionTypes().catch(error =>\r\n      console.log(error)\r\n    );\r\n\r\n    setEmissionTypes(types);\r\n  };\r\n\r\n  const getProgress = async () => {\r\n    const offset = await PurchaseService.getTotalOffset().catch(error =>\r\n      console.log(error)\r\n    );\r\n    const co2Total = await Co2EmissionService.getTotalCo2().catch(error =>\r\n      console.log(error)\r\n    );\r\n    let status = offset / co2Total;\r\n    setTotalOffset(offset);\r\n    if (status > 1) {\r\n      status = 1;\r\n    }\r\n    setProgress(status);\r\n  };\r\n\r\n  const getTotalPopulation = async () => {\r\n    const population = await MunicipalityService.getTotalPopulation().catch(\r\n      error => console.log(error)\r\n    );\r\n    setTotalPopulation(population);\r\n  };\r\n\r\n  const getTotalCo2 = async () => {\r\n    const co2 = await Co2EmissionService.getTotalCo2().catch(error =>\r\n      console.log(error)\r\n    );\r\n    setTotalCo2(co2);\r\n  };\r\n\r\n  const getMunicipalities = async () => {\r\n    try {\r\n      const response = await MunicipalityService.getMunicipalities().catch(\r\n        error => console.log(error)\r\n      );\r\n      response.sort(\r\n        (a: Municipality, b: Municipality) =>\r\n          b.co2Offset / b.population - a.co2Offset / a.population\r\n      );\r\n      setMunicipalities(response);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <img className=\"logo\" alt=\"Jöfnum okkur\" src=\"/assets/logo-200x200.png\" />\r\n      <section className=\"intro_section\">\r\n        <div className=\"counter_and_logo_outer_container\">\r\n          <div\r\n            className='tagline'\r\n            data-tip={`Samkvæmt tölum Hagstofunnar er heildar útblástur frá heimilum landsmanna ${FormatUtils.thousandSeparator(totalCo2)} tonn, eða ${FormatUtils.round(totalCo2 / totalPopulation, 1)} tonn á hvern einstakling.`}\r\n          >\r\n            Kolefnisjöfnum heimili landsins\r\n          </div>\r\n          <div className=\"counter_and_logo_container\">\r\n            <Co2Counter className=\"co2counter\" totalOffset={totalOffset} />\r\n            <Button\r\n              className='offset-yourself'\r\n              onClick={() => setOpenModal('purchase')}\r\n            >\r\n              Jafnaðu þig\r\n            </Button>\r\n            <div className=\"municipalities-progress\">\r\n              {municipalities.map((m, idx) =>\r\n                idx >= 5 ? null : (\r\n                  <MunicipalityProgress\r\n                    key={m.id}\r\n                    municipality={m}\r\n                    totalPopulation={totalPopulation}\r\n                    totalCo2={totalCo2}\r\n                  />\r\n                )\r\n              )}\r\n              <Button\r\n                className='view-all-municipalities'\r\n                onClick={() => setOpenModal('municipalities')}\r\n              >\r\n                Sjá öll\r\n              </Button>\r\n            </div>\r\n          </div>\r\n          <CurvedProgressBar progress={progress} />\r\n        </div>\r\n\r\n      </section>\r\n      {/* <Button onClick={() => setOpenModal('leaderboard')}>\r\n        Sjá stigatöflu\r\n      </Button> */}\r\n      <div className=\"leaderboard_container\">\r\n        <div className='participants'>\r\n         \r\n            <div className='title '>Nýjustu framlög</div>\r\n\r\n            {newestPurchases.map((purchase: NewPurchase, index: number) => (\r\n              <div className='purchase ' key={index}>\r\n                <div className='participant'>{purchase.participantName}</div>\r\n                <div className='municipality'>{purchase.municipalityName}</div>\r\n                <div className='co2'>{FormatUtils.thousandSeparator(Math.round(10 * purchase.totalCo2) / 10)} tonn</div>\r\n              </div>\r\n            ))}\r\n         \r\n        </div>\r\n      </div>\r\n\r\n      <InfoSection title=\"Jöfnum okkur á loftlagsbreytingum!\" text=\"Gerðu þitt í baráttunni með því að kolefnisjafna rekstur heimilisins. Skráðu þig inn í gegnum Facebook og kolefnisjafnaðu í gegnum sjóð að eigin vali. Jafnaðu þig á loftlagsbreytingum og losnaðu við flugviskubitið!\"\r\n        imagePath=\"/assets/travel.png\" />\r\n\r\n      <InfoSection title=\"Hvað er kolefnisjöfnun?\"\r\n        text=\"Kolefnisjöfnun snýst um að binda aftur þau kolefni losuð hafa verið út í andrúmsloftið. Til eru ýmsar aðferðir til þess, ein þeirra er að gróðursetja tré. Með því að binda kolefni vegur þú á móti losun gróðurhúsalofttegunda og tekur grænt skref inn í framtíðina.\"\r\n        imagePath=\"/assets/seed.png\" />\r\n\r\n      <InfoSection title=\"Jafnaðu þig mest!\"\r\n        text=\"Við höldum utan um það hvaða bæjarfélög jafna sig hraðast. Þeir sem hafa mesta jafnaðargeðið birtast á topp fimm lista okkar, en þú sem einstaklingur birtist einnig í einstaklingskeppninni. Sýndu vinum og ættingjum þínum hversu jafnlyndur einstaklingur þú ert!\"\r\n        imagePath=\"/assets/hall.png\" />\r\n      <p className=\"icons_whodunnit\">Icons made by <a href=\"https://www.flaticon.com/authors/smashicons\" title=\"Smashicons\">Smashicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\"> www.flaticon.com</a></p>\r\n      <div className=\"leaderboard_container\">\r\n        <div className='participants'>\r\n    \r\n            <div className='title'>Mest jafnað</div>\r\n            {leaderboard.map((p: LeaderBoardParticipant, index: number) => (\r\n              <div className='purchase' key={index}>\r\n                <div className='participant'>{p.name}</div>\r\n                <div className='participant_title'>{p.title}</div>\r\n                <div className='co2'>{FormatUtils.thousandSeparator(Math.round(10 * p.totalCo2) / 10)} tonn</div>\r\n              </div>\r\n            ))}\r\n      \r\n\r\n        </div>\r\n      </div>\r\n\r\n      <section className=\"chart_section\">\r\n        {!emissionTypes || emissionTypes.length === 0 ? null : (\r\n          <Chart emissionData={emissionTypes} />\r\n        )}\r\n\r\n      </section>\r\n      <section className=\"chart_section doughnut_chart\">\r\n\r\n        {!emissionTypes || emissionTypes.length === 0 ? null : (\r\n          <DoughnutChart emissionData={emissionTypes} />\r\n        )}\r\n      </section>\r\n      <MunicipalitiesModal\r\n        municipalities={municipalities}\r\n        isOpen={openModal === \"municipalities\"}\r\n        toggle={() => setOpenModal(\"\")}\r\n        totalPopulation={totalPopulation}\r\n        totalCo2={totalCo2}\r\n      />\r\n      <PurchaseModal\r\n        isOpen={openModal === \"purchase\"}\r\n        toggle={() => setOpenModal(\"\")}\r\n        offsetAgents={offsetAgents}\r\n        emissionPerPerson={totalCo2 / totalPopulation}\r\n        municipalities={municipalities}\r\n        onSubmit={() => {\r\n          getAllProgress()\r\n          setOpenModal('confirmed')\r\n        }}\r\n      />\r\n      <ConfirmedModal\r\n        isOpen={openModal === \"confirmed\"}\r\n        toggle={() => setOpenModal(\"\")}\r\n      />\r\n      <ReactTooltip />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n// Photo by Jon Flobrant on Unsplash\r\n","import React from 'react'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom'\r\n\r\nimport { Header } from 'components'\r\n\r\nimport { Home } from 'pages'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles/index.scss'\r\n\r\nconst App = () => (\r\n  <>\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path='/' component={Home} />\r\n        <Redirect to='/' />\r\n      </Switch>\r\n    </Router>\r\n  </>\r\n)\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n \r\n    <App />\r\n  ,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}